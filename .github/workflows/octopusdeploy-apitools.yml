name: Octopus Deploy API Tools Continuous Integration

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:

    strategy:
      matrix:
        configuration: [Release]
        nuget: [latest]

    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: OctopusDeployAPITools\OctopusDeployAPITools.sln                         # Replace with your solution name, i.e. MyWpfApp.sln.
      Output_Directory: OctopusDeployAPITools\Output

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x

    - uses: actions/checkout@master
    - name: Setup NuGet.exe
      uses: nuget/setup-nuget@v1
      with:
        nuget-version: ${{ matrix.nuget }}

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.1

    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Build the application
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration /p:PublishUrl="../output"
      env:
        Configuration: ${{ matrix.configuration }}

    # Upload the zip file
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: Zip File
        path: "./output"
